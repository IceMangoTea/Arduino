#include <TM1637Display.h>
#include <Adafruit_Sensor.h>
#include <DHT.h>
#include <math.h>
// Define the connections pins:
#define CLK 2
#define DIO 3
#define DHTPIN 4
// Create variable:
int temperature_celsius;


// defines pins numbers
const int trigPin = 10;
const int echoPin = 9;
const int rled = 13;
const int gled = 12;
// defines global variables
long duration;
int distance;


// Create degree Celsius symbol:
const uint8_t celsius[] = {
SEG_A | SEG_B | SEG_F | SEG_G, // Circle
SEG_A | SEG_D | SEG_E | SEG_F // C
};
// Create degree Fahrenheit symbol:
const uint8_t fahrenheit[] = {
SEG_A | SEG_B | SEG_F | SEG_G, // Circle
SEG_A | SEG_E | SEG_F | SEG_G // F
};
// Set DHT type, uncomment whatever type you're using!
#define DHTTYPE DHT11 // DHT 11
//#define DHTTYPE DHT22 // DHT 22 (AM2302)
//#define DHTTYPE DHT21 // DHT 21 (AM2301)
// Create display object of type TM1637Display:
TM1637Display display = TM1637Display(CLK, DIO);
// Create dht object of type DHT:
DHT dht = DHT(DHTPIN, DHTTYPE);
void setup() {

// Set the display brightness (0-7):
display.setBrightness(0);
// Clear the display:
display.clear();
// Setup sensor:
dht.begin();

//Distance Sensor
pinMode(trigPin, OUTPUT); // Sets the trigPin as an Output
pinMode(echoPin, INPUT); // Sets the echoPin as an Input

pinMode(rled , OUTPUT);
pinMode(gled , OUTPUT);

// Begin serial communication at a baud rate of 9600:
Serial.begin(9600);
// Wait for console opening:
delay(2000);


}
void loop() {
// Read the temperature as Celsius and Fahrenheit:
temperature_celsius = dht.readTemperature();

// Print the temperature to the Serial Monitor:
Serial.println(temperature_celsius);

// Show the temperature on the TM1637 display:



//distance 
// Clears the trigPin
digitalWrite(trigPin, LOW);
delayMicroseconds(2);
// Sets the trigPin on HIGH state for 10 micro seconds
digitalWrite(trigPin, HIGH);
delayMicroseconds(10);
// Reads the echoPin, returns the ultrasound wave travel time in microsec
duration = pulseIn(echoPin, HIGH); // this is “pulse In” NOT “pulse 1n”
// Calculating the distance
distance= duration*0.034/2;
// Prints the distance on the Serial Monitor
Serial.print ("Distance(cm): ");
Serial.println(distance);
delay(100);
 if ( distance >= 10 )
  {
    display.clear();
    digitalWrite(rled, LOW);
    digitalWrite(gled, HIGH);
    delay(500);
    digitalWrite(gled, LOW);
  }
  else if (distance < 10 )
  {
    digitalWrite(rled, HIGH);
    display.showNumberDec(temperature_celsius, false, 2, 0);
    display.setSegments(celsius, 2, 2);
  }
delay(1000);



}
